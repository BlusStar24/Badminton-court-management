
@{
    Layout = "~/Views/Shared/_LayoutUser.cshtml";
    ViewBag.Title = "Đặt lịch sân";
}
@using Newtonsoft.Json

@section styles {
    <style>
        body {
            font-family: 'Inter', sans-serif;
        }

        .locked {
            background-color: #697a92 !important;
            cursor: not-allowed;
            opacity: 0.4;
            pointer-events: none;
        }

        .booked {
            background-color: #f97316;
            color: white;
        }

        .available {
            background-color: #fef3c7;
            cursor: pointer;
            transition: all 0.2s ease;
        }

        thead th:not(:first-child) {
            position: relative;
            left: -24px;
        }

        td {
            min-width: 50px;
            height: 60px;
            padding: 6px;
            text-align: center;
            border: 1px solid #161617;
            border-radius: 6px;
        }

        .available:hover {
            background-color: #fdba74;
        }
    </style>
}

<div class="max-w-[95vw] mx-auto px-4 py-6">
    <!-- Header -->
    <div class="flex items-center justify-between bg-gradient-to-r from-orange-500 to-orange-400 rounded-2xl p-4 shadow-md text-white mb-8">
        <div class="flex items-center space-x-4">
            <img src="https://i.postimg.cc/028FcjPg/phu-thinh-logo.png" alt="Logo Phú Thịnh" class="h-16 w-16 rounded-full bg-white p-1" />
            <div>
                <h1 class="text-2xl font-extrabold">Sân Cầu Lông Phú Thịnh</h1>
                <p class="text-orange-100 text-sm">Badminton Center • Tân Phú</p>
            </div>
        </div>
        <div class="text-right">
            @if (Session["UserID"] == null)
            {
                <!-- Chưa đăng nhập -->
                <div class="space-x-2 mb-1">
                    <!-- Gộp 1 nút đăng nhập duy nhất -->
                    <button onclick="openPopup()" class="bg-white text-orange-600 font-semibold px-3 py-1 rounded-lg shadow hover:bg-orange-100 transition">
                        Đăng nhập
                    </button>

                    <!-- Đăng ký -->
                    <button onclick="window.open('@Url.Action("Register", "Account")', '_blank', 'width=460,height=580')" class="bg-white text-orange-600 font-semibold px-3 py-1 rounded-lg shadow hover:bg-orange-100 transition">
                        Đăng ký
                    </button>
                </div>
            }
            else
            {
                <!-- Đăng nhập rồi -->
                <div class="flex items-center space-x-3">
                    <img src="https://i.postimg.cc/ydRcFtby/avatar.jpg" alt="avatar" class="w-10 h-10 rounded-full border-2 border-white" />
                    <div class="text-left">
                        <div class="font-semibold">@Session["UserName"]</div>
                        <form action="@Url.Action("Logout", "Account")" method="post" class="mt-1">
                            <button type="submit" class="text-xs text-white bg-orange-600 hover:bg-orange-700 px-2 py-1 rounded-md transition">
                                Đăng xuất
                            </button>
                        </form>
                    </div>
                </div>
            }
        </div>
    </div>


    <!-- Chọn ngày -->
    <div class="flex justify-center mb-6">
        <div class="bg-white shadow-sm p-4 rounded-xl flex items-center space-x-4">
            <label for="dateFilter" class="font-semibold text-orange-700">Ngày:</label>
            <input type="text" id="dateFilter"
                   class="border border-orange-300 rounded-lg p-2 focus:outline-none focus:ring-2 focus:ring-orange-500"
                   placeholder="dd/mm/yyyy" />
        </div>
    </div>

    <!-- Lưu ý và liên hệ -->
    <div class="bg-orange-50 border-l-4 border-orange-400 p-5 rounded-xl shadow mb-8">
        <div class="grid grid-cols-1 sm:grid-cols-3 gap-4 items-start">

            <!-- Cột 1: Nội dung -->
            <div>
                <h2 class="font-bold text-orange-700 mb-2">📌 Lưu ý:</h2>
                <ul class="list-disc list-inside text-sm space-y-1 text-gray-700">
                    <li>Đặt lịch <strong>CỐ ĐỊNH</strong> liên hệ: <a href="tel:0986390504" class="text-orange-600 hover:underline">0986.390.504</a></li>
                    <li>Khung 18h–22h Thứ 2 - thứ 6 <strong>100k/1h</strong> (CỐ ĐỊNH).</li>
                    <li>Khung 5h–17h Thứ 2 - thứ 6 hàng tuần giá ưu đãi <strong>49k/1h</strong>.</li>
                    <li>T7–CN: <strong>89k/1h</strong></li>
                </ul>
            </div>

            <!-- Cột 2: Nút xem lịch đã đặt (canh giữa cột) -->
            <div class="flex justify-center items-center sm:mt-6">
                <button onclick="checkLoginBeforeLichDaDat()" class="px-5 py-2 bg-orange-500 text-white rounded-lg shadow hover:bg-orange-600 transition">
                    Xem lịch đã đặt
                </button>
            </div>

            <!-- Cột 3: Liên hệ -->
            <div class="flex flex-col items-center sm:items-end">
                <span class="text-base font-semibold text-gray-700 mb-2">Liên hệ:</span>
                <div class="flex gap-5 text-[22px]">
                    <a href="https://zalo.me/0986390504" target="_blank" title="Zalo" class="hover:scale-110 transition">
                        <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/9/91/Icon_of_Zalo.svg/2048px-Icon_of_Zalo.svg.png" alt="Zalo" class="w-6 h-6">
                    </a>
                    <a href="https://www.facebook.com/profile.php?id=61554189003939" target="_blank" title="Facebook" class="text-blue-600 hover:scale-110 transition"><i class="fab fa-facebook"></i></a>
                    <a href="tel:0986390504" title="Gọi điện" class="text-green-600 hover:scale-110 transition"><i class="fas fa-phone-alt"></i></a>
                </div>
            </div>

        </div>
    </div>


    <!-- Giỏ hàng -->
    <div id="cart-display" class="hidden mb-4 bg-white p-4 rounded shadow-md">
        <h2 class="text-lg font-semibold mb-2 text-orange-600">🧺 Sân đã đặt:</h2>
        <ul id="cartList" class="space-y-1 text-sm text-gray-700"></ul>
    </div>

    <!-- Bảng sân -->
    <div class="overflow-x-auto bg-white rounded-xl shadow-md">
        <div class="w-max">
            <table id="courtTable" class="w-full text-sm text-center">
                <thead id="tableHead"></thead>
                <tbody id="courtTableBody"></tbody>
            </table>
        </div>
    </div>

    <!-- Chú thích -->
    <div class="flex justify-center gap-6 my-6 text-sm">
        <div class="flex items-center">
            <div class="w-4 h-4 bg-amber-200 mr-2 rounded"></div>Trống
        </div>
        <div class="flex items-center">
            <div class="w-4 h-4 bg-orange-500 mr-2 rounded"></div>Đã đặt
        </div>
        <div class="flex items-center">
            <div class="w-4 h-4 mr-2 rounded" style="background-color: #697a92;"></div>Khoá
        </div>
    </div>

    <!-- Footer -->
    <div class="flex justify-between items-center mt-6">
        <a href="#" class="text-orange-600 hover:underline font-semibold">📄 Xem sân & bảng giá</a>
        <button id="nextButton"
                class="bg-orange-500 hover:bg-orange-600 text-white px-6 py-2 rounded-xl font-semibold shadow transition">
            TIẾP
            THEO
        </button>
    </div>
    <!-- BẢNG GIÁ & BẢN ĐỒ -->
    <div class="mt-10 grid grid-cols-1 md:grid-cols-2 gap-6">
        <!-- BẢNG GIÁ -->
        <div class="bg-white p-6 rounded-xl shadow-md h-full flex flex-col justify-between">
            <div>
                <h2 class="text-xl font-bold text-orange-1000 mb-4">💰 BẢNG GIÁ</h2>
                <img src="https://i.postimg.cc/Y0wg88cK/BangGia.jpg"
                     alt="Bảng giá sân cầu lông"
                     class="mx-auto w-full h-auto rounded-lg shadow aspect-[4/3]" />
            </div>
        </div>

        <!-- BẢN ĐỒ -->
        <div class="bg-white p-6 rounded-xl shadow-md h-full flex flex-col justify-between">
            <div>
                <h2 class="text-xl font-bold text-orange-1000 mb-4">📍 VỊ TRÍ SÂN</h2>
                <p class="text-sm text-gray-600 mb-2">Địa chỉ: 23C Lũy Bán Bích, P. Tân Thới Hoà, Q. Tân Phú, TP. HCM</p>
                <iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3919.6798813260225!2d106.62997471139286!3d10.759135989344326!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x31752e83238db64b%3A0x89324bb909b8be7f!2zMjNDIMSQLiBMxal5IELDoW4gQsOtY2gsIFTDom4gVGjhu5tpIEhvw6AsIFTDom4gUGjDuiwgSOG7kyBDaMOtIE1pbmgsIFZp4buHdCBOYW0!5e0!3m2!1svi!2s!4v1752052968529!5m2!1svi!2s"
                        class="mx-auto w-full h-auto rounded-lg shadow aspect-[4/3]"
                        style="border:0;" allowfullscreen="" loading="lazy"
                        referrerpolicy="no-referrer-when-downgrade">
                </iframe>
            </div>
        </div>
    </div>


    <!-- HÌNH ẢNH SÂN -->
    <div class="mt-8 bg-white p-6 rounded-xl shadow-md">
        <h2 class="text-xl font-bold text-orange-600 mb-4">📸 HÌNH ẢNH SÂN</h2>
        <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4">
            <img src="https://i.postimg.cc/yxSQ3LFM/z5892697839734-78e20c41587f52f66926423b98e758fe.jpg" alt=""
                 class="rounded-lg shadow-md">
            <img src="https://i.postimg.cc/fknHcYCJ/z5875269176415-b5599643746c7400d64dc1a51b6ff131.jpg" alt=""
                 class="rounded-lg shadow-md">
            <img src="https://i.postimg.cc/T2zG7SHW/z6084745560701-2de1369d528e8b6d4f2d224ee2db56c2.jpg" alt=""
                 class="rounded-lg shadow-md">
            <img src="https://i.postimg.cc/pVhRBxkH/z6132729112262-f79cb5895fff19dabb17d546078fb475.jpg" alt=""
                 class="rounded-lg shadow-md">
            <img src="https://i.postimg.cc/pLZHddVD/z6545373310697-aa44ab9291147bd15f6866aad7f4d581.jpg" alt=""
                 class="rounded-lg shadow-md">
            <img src="https://i.postimg.cc/yYGRbVCy/z5791261333458-b650f5923f5e2a56c2b362a68fa729ec.jpg" alt=""
                 class="rounded-lg shadow-md">
        </div>
    </div>
    <form id="bookingForm" method="post" action="/Booking/ThanhToan">
        @Html.AntiForgeryToken()
        <input type="hidden" name="bookingsJson" id="bookingsJson" />
    </form>

</div>

@section scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            flatpickr("#dateFilter", {
                dateFormat: "d/m/Y",
                locale: flatpickr.l10ns.vi
            });
        });
    </script>

    <script>
    function checkLoginBeforeLichDaDat() {
        const isLoggedIn = '@(Session["UserID"] != null ? "true" : "false")';
        if (isLoggedIn === "true") {
            window.location.href = '@Url.Action("LichDaDat", "Booking")';
        } else {
            const msg = "Bạn cần đăng nhập để xem lịch sân đã đặt.\nTài khoản và mật khẩu chính là tên và số điện thoại bạn dùng khi đặt sân.\n Nếu cần hỗ trợ vui lòng liên hệ zalo tel:0986390504";
            if (confirm(msg)) {
                openPopup(); // Gọi hàm openPopup thay vì chuyển hướng
            }
        }
    }
    </script>
    <script>
        const timePoints = Array.from({ length: 38 }, (_, i) => 5 + i * 0.5);
        const timeSlots = timePoints;
        const cartItems = [];

        function formatHour(hour) {
            const h = Math.floor(hour).toString().padStart(2, '0');
            const m = hour % 1 === 0 ? '00' : '30';
            return `${h}:${m}`;
        }

        function generateTimeHeaders() {
            const thead = document.getElementById('tableHead');
            thead.innerHTML = '';
            const row = document.createElement('tr');
            row.className = 'bg-orange-100 text-gray-800';

            const firstTh = document.createElement('th');
            firstTh.className = 'p-3 text-left font-semibold';
            firstTh.textContent = 'Sân';
            row.appendChild(firstTh);

            timeSlots.forEach(hour => {
                const th = document.createElement('th');
                th.className = 'p-2';
                th.textContent = formatHour(hour);
                row.appendChild(th);
            });

            // Thêm mốc 24:00 (chỉ header, không thêm ô dữ liệu)
            const thLast = document.createElement('th');
            thLast.className = 'p-2';
            thLast.textContent = '24:00';
            row.appendChild(thLast);

            thead.appendChild(row);
        }


        function generateCourtRows() {
            const tbody = document.getElementById('courtTableBody');
            tbody.innerHTML = '';
            for (let i = 1; i <= 6; i++) {
                const row = document.createElement('tr');
                const courtName = `Sân ${i}`;
                const firstTd = document.createElement('td');
                firstTd.className = 'p-3 font-medium text-orange-600 whitespace-nowrap';
                firstTd.textContent = courtName;
                row.appendChild(firstTd);

                timeSlots.forEach((hour, colIndex) => {
                    const cell = document.createElement('td');
                    const time = formatHour(hour);
                    cell.className = 'p-2 text-center available';
                    cell.innerHTML = '';
                    cell.addEventListener('click', () => handleCellClick(cell, courtName, time));

                    // Kiểm tra nếu đã được chọn trước đó
                    const date = document.getElementById('dateFilter').value;
                    if (cartItems.find(i => i.date === date && i.court === courtName && i.time === time)) {
                        cell.classList.remove('available');
                        cell.classList.add('booked');
                        cell.innerHTML = '';
                    }

                    row.appendChild(cell);
                });
                tbody.appendChild(row);
            }
        }

        function getCell(court, time) {
            const rows = document.querySelectorAll('#courtTableBody tr');
            for (const row of rows) {
                if (row.children[0].textContent === court) {
                    const colIndex = timeSlots.findIndex(t => {
                        const h = Math.floor(t).toString().padStart(2, '0');
                        const m = (t % 1 === 0 ? '00' : '30');
                        const formatted = `${h}:${m}`;
                        return formatted === time;
                    });
                    return row.children[colIndex + 1];
                }
            }
            return null;
        }
        // //gọi API để lấy trạng thái sân
        // function updateTrangThaiSan() {
        //     const date = document.getElementById('dateFilter').value;

        //     fetch(/San/GetTrangThai?ngay=${date})
        //         .then(response => response.json())
        //         .then(data => {
        //             // Reset all cells first
        //             document.querySelectorAll('#courtTableBody tr').forEach(row => {
        //                 for (let i = 1; i < row.children.length; i++) {
        //                     const cell = row.children[i];
        //                     cell.classList.remove('booked', 'locked');
        //                     if (!cell.classList.contains('p-3')) {
        //                         cell.classList.add('available');
        //                         cell.innerHTML = '';
        //                     }
        //                 }
        //             });

        //             // Update based on API result
        //             data.forEach(item => {
        //                 const cell = getCell(item.court, item.time);
        //                 if (cell) {
        //                     cell.classList.remove('available');
        //                     cell.classList.add(item.status);
        //                     cell.innerHTML = item.status === 'booked' ? '✅' :
        //                         item.status === 'locked' ? '🔒' : '';
        //                 }
        //             });
        //         });
        // }
        function updateTrangThaiSan() {
            const date = document.getElementById('dateFilter').value;

            fetch(`/Booking/GetTrangThai?ngay=${date}`)
                .then(response => response.json())
                .then(data => {
                    // Reset toàn bộ ô
                    document.querySelectorAll('#courtTableBody tr').forEach(row => {
                        for (let i = 1; i < row.children.length; i++) {
                            const cell = row.children[i];
                            cell.classList.remove('booked', 'locked', 'available');
                            cell.innerHTML = '';
                            cell.classList.add('available');
                        }
                    });

                    // Đánh dấu các ô đã đặt từ DB
                    data.forEach(item => {
                        const cell = getCell(item.court, item.time);
                        if (cell) {
                            cell.classList.remove('available');
                            cell.classList.add(item.status);
                            cell.innerHTML = item.status === 'booked' ? '' : '';
                        }
                    });

                    // Đánh dấu lại các ô trong giỏ hàng nếu trùng ngày
                    const selectedDate = date;
                    cartItems.forEach(item => {
                        if (item.date !== selectedDate) return;
                        const cell = getCell(item.court, item.time);
                        if (cell && !cell.classList.contains('locked')) {
                            cell.classList.remove('available');
                            cell.classList.add('booked');
                            cell.innerHTML = '';
                        }
                    });

                    lockPastTimeSlots(); // Khóa ô quá khứ
                });
        }

        // Gọi mỗi 3 giây
        setInterval(updateTrangThaiSan, 3000);

        // Gọi ngay khi trang tải
        function handleCellClick(cell, court, time) {
            const date = document.getElementById('dateFilter').value;

            // ❌ Chặn nếu ô đã khóa hoặc đã được đặt từ DB
            if (cell.classList.contains('locked') || (cell.classList.contains('booked') && !cell.dataset.manual)) return;

            const [h, m] = time.split(':').map(Number);
            const hour = h + (m === 30 ? 0.5 : 0);

            const isSpecialGroup = (hour >= 18 && hour < 20) || (hour >= 20 && hour < 22);

            if (isSpecialGroup) {
                const groupStart = hour < 20 ? 18 : 20;
                const groupHours = [0, 0.5, 1, 1.5].map(off => groupStart + off);

                const isGroupSelected = groupHours.some(h => {
                    const t = `${Math.floor(h)}:${h % 1 === 0 ? '00' : '30'}`;
                    const key = `${date}-${court}-${t}`;
                    return cartItems.find(i => i.key === key);
                });

                groupHours.forEach(h => {
                    const t = `${Math.floor(h)}:${h % 1 === 0 ? '00' : '30'}`;
                    const key = `${date}-${court}-${t}`;
                    const c = getCell(court, t);

                    if (!c || c.classList.contains('locked') || (c.classList.contains('booked') && !c.dataset.manual)) return;

                    const idx = cartItems.findIndex(i => i.key === key);

                    if (isGroupSelected) {
                        if (idx !== -1) cartItems.splice(idx, 1);
                        c.classList.remove('booked');
                        c.classList.add('available');
                        c.innerHTML = '';
                        delete c.dataset.manual;
                    } else {
                        if (idx === -1) {
                            cartItems.push({ key, date, court, time: t });
                            c.classList.remove('available');
                            c.classList.add('booked');
                            c.innerHTML = '';
                            c.dataset.manual = true;
                        }
                    }
                });

                renderCart();
                return;
            }

            const key = `${date}-${court}-${time}`;
            const idx = cartItems.findIndex(i => i.key === key);

            if (idx !== -1) {
                cartItems.splice(idx, 1);
                cell.classList.remove('booked');
                cell.classList.add('available');
                cell.innerHTML = '';
                delete cell.dataset.manual;
            } else {
                cartItems.push({ key, date, court, time });
                cell.classList.remove('available');
                cell.classList.add('booked');
                cell.innerHTML = '';
                cell.dataset.manual = true;
            }

            renderCart();
        }
        //===============================================================================
        function toYMD(dateStr) {
            const parts = dateStr.split('/');
            if (parts.length !== 3) return '';
            return `${parts[2]}-${parts[1].padStart(2, '0')}-${parts[0].padStart(2, '0')}`;
        }
        function parseDate(value) {
            if (value.includes('/')) {
                // dd/mm/yyyy -> yyyy-mm-dd
                const [d, m, y] = value.split('/');
                return `${y}-${m.padStart(2, '0')}-${d.padStart(2, '0')}`;
            } else {
                // giả sử đã là yyyy-mm-dd
                return value;
            }
        }

        function renderCart() {
            const cartDiv = document.getElementById('cart-display');
            const cartList = document.getElementById('cartList');

            if (cartItems.length === 0) {
                cartDiv.classList.add('hidden');
                return;
            }
            cartDiv.classList.remove('hidden');

            const grouped = {};
            cartItems.forEach(item => {
                const key = `${item.date}||${item.court}`;
                if (!grouped[key]) grouped[key] = [];
                grouped[key].push(item.time);
            });

            const lines = [];
            for (const k in grouped) {
                const [date, court] = k.split('||');
                const times = grouped[k]
                    .map(t => {
                        const [h, m] = t.split(':').map(Number);
                        return h + (m === 30 ? 0.5 : 0);
                    })
                    .sort((a, b) => a - b);

                let i = 0;
                while (i < times.length) {
                    const start = times[i];
                    let end = start;
                    while (i + 1 < times.length && times[i + 1] === end + 0.5) {
                        end += 0.5;
                        i++;
                    }
                    const fmt = t => `${Math.floor(t)}:${t % 1 === 0 ? '00' : '30'}`;
                    const weekday = new Date(toYMD(date)).toLocaleDateString('vi-VN', { weekday: 'long' });
                    const formattedDate = new Date(toYMD(date)).toLocaleDateString('vi-VN');
                    lines.push(`🔸 ${weekday}, ${formattedDate} - ${court} - ${fmt(start)} → ${fmt(end + 0.5)}`);
                    i++;
                }
            }

            cartList.innerHTML = lines.map(line => `<li>${line}</li>`).join('');
        }
        // chuẩn hóa về 0h để so sánh đúng ngày:
        function getDateOnly(d) {
            return new Date(d.getFullYear(), d.getMonth(), d.getDate());
        }

        // Khóa ô đã qua
        function lockPastTimeSlots() {
            const selectedRaw = document.getElementById('dateFilter').value;

            let selectedDate;
            if (selectedRaw.includes('/')) {
                const [d, m, y] = selectedRaw.split('/');
                selectedDate = new Date(`${y}-${m}-${d}T00:00:00`);
            } else {
                selectedDate = new Date(selectedRaw);
            }

            const now = new Date();
            const today = getDateOnly(now);
            const selected = getDateOnly(selectedDate);
            const nowHour = now.getHours() + now.getMinutes() / 60;

            document.querySelectorAll('#courtTableBody tr').forEach(row => {
                const cells = row.querySelectorAll('td');
                for (let i = 1; i < cells.length; i++) {
                    const cell = cells[i];
                    const time = timeSlots[i - 1];
                    const [h, m] = formatHour(time).split(':').map(Number);
                    const slotHour = h + m / 60;

                    if (selected < today || (selected.getTime() === today.getTime() && slotHour <= nowHour)) {
                        if (!cell.classList.contains('booked')) {
                            cell.classList.remove('available', 'booked');
                            cell.classList.add('locked');
                            cell.innerHTML = '';
                        }
                    }
                }
            });
        }

        // Khởi động
        window.onload = () => {
            const datePicker = document.getElementById('dateFilter');
            const today = new Date();
            const dd = String(today.getDate()).padStart(2, '0');
            const mm = String(today.getMonth() + 1).padStart(2, '0');
            const yyyy = today.getFullYear();
            datePicker.value = `${dd}/${mm}/${yyyy}`;

            generateTimeHeaders();
            generateCourtRows();
            updateTrangThaiSan();
            renderCart();

            datePicker.addEventListener('change', () => {
                generateCourtRows();
                updateTrangThaiSan();
                renderCart();
            });
        };
        // nút tiếp theo
        document.getElementById('nextButton').addEventListener('click', () => {
            if (cartItems.length < 2) {
                alert('Vui lòng chọn ít nhất 1 giờ chơi.');
                return;
            }

            const grouped = {};
            cartItems.forEach(item => {
                const key = `${item.date}||${item.court}`;
                if (!grouped[key]) grouped[key] = [];
                grouped[key].push(item.time);
            });

            const bookings = [];
            for (const key in grouped) {
                const [date, court] = key.split('||');
                const times = grouped[key]
                    .map(t => {
                        const [h, m] = t.split(':').map(Number);
                        return h + (m === 30 ? 0.5 : 0);
                    })
                    .sort((a, b) => a - b);

                let i = 0;
                while (i < times.length) {
                    const start = times[i];
                    let end = start;
                    while (i + 1 < times.length && times[i + 1] === end + 0.5) {
                        end += 0.5;
                        i++;
                    }

                    const duration = end + 0.5 - start;
                    let type = 'giờ chẵn';
                    if (duration === 1.0) type = 'giờ chẵn';
                    else if (duration === 0.5) type = 'giờ lẻ';
                    else if (duration >= 2) type = 'cố định';
                    else type = 'pass sân';

                    bookings.push({
                        date,
                        court,
                        start: `${Math.floor(start)}:${start % 1 === 0 ? '00' : '30'}`,
                        end: `${Math.floor(end + 0.5)}:${(end + 0.5) % 1 === 0 ? '00' : '30'}`,
                    });

                    i++;
                }
            }

            // Đưa vào input ẩn rồi submit form
            document.getElementById('bookingsJson').value = JSON.stringify(bookings);
            document.getElementById('bookingForm').submit();
        });


        function openPopup() {
            const url = `/Account/Login`;
            const w = 460, h = 580;
            const left = (screen.width - w) / 2;
            const top = (screen.height - h) / 2;
            const popup = window.open(url, '_blank', `width=${w},height=${h},left=${left},top=${top},resizable=no`);
            if (!popup) {
                alert("⚠️ Trình duyệt đã chặn popup. Vui lòng bật cho phép popup cho trang này.");
            }
        }

    </script>
}